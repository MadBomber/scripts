#!/usr/bin/env ruby
##########################################
###
##  File: gemt
##  Desc: Like "rake -T" but for gems
##
#

require 'awesome_print'  # Pretty print Ruby objects with proper indentation and colors
require 'terminal-size'  # A tiny gem to accomplish a simple task: Determining the terminal size.
require 'word_wrapper'   # Pure ruby word wrapping

def usage
  puts <<~EOS

    list gems -- like "rake -T"

    usage: #{__FILE__.basename} [search_string]

    Where:

      search_string is an optional keyword or phrase

    Example:

      gemt guard      shows list of the guard gems

  EOS
end # def usage

class NilClass
  def split(*args)
    [" "]
  end
  def strip
    ""
  end
  def to_s
    ''
  end
end # class NilClass

unless ARGV.empty?
  if %w[ -h --help ].include? ARGV.first
    usage
    exit
  end
end


def things(number=1, thing=' ')
  thing*number
end


def spaces(number=1)
  things number
end


def dashes(number=1)
  things number, '-'
end

search_strings = ARGV.map{ |a| a.downcase }

gem_hash = Hash.new

longest_desc = 0

Gem::Specification.all.each do |gs|
  unless search_strings.empty?
    thing = gs.name + ' ' + gs.summary.to_s + ' ' + gs.description.to_s
    thing.downcase!

    found_one = false
    search_strings.each do |want_this|
      if thing.include?(want_this)
        found_one = true
        break
      end
    end

    next unless found_one
  end # unless search_strings.empty?

  gem_hash[gs.name] = gs
  longest_desc = gs.name.size if longest_desc < gs.name.size
end

desc_start_col = longest_desc + 2

width = Terminal.size[:width] - desc_start_col - 4

gem_hash.each_pair do |name, gs|
  summary = gs.summary
  print "#{name}"
  print spaces(desc_start_col - name.size)

  text = WordWrapper::MinimumRaggedness.new(width, summary.split("\n").first.strip).wrap

  text += gs.homepage.empty? ? "https://rubygems.org/gems/#{name}" : gs.homepage

  text_array  = text.split("\n")
  last_x      = text_array.size-1

  text_array.each_index do |x|
    prefix = x == last_x ? '|__ ' : '|   '
    puts (x<1 ? text_array[x] : (spaces desc_start_col) + prefix+text_array[x] )
  end
end # gem_hash.each_pair do |name, gs|

# ap Gem::Specification.all.first.instance_variables
