#!/usr/bin/env ruby
##########################################
###
##  File: brewt
##  Desc: Like "gemt"
##
#

require 'pathname'  # STDLIB

me = Pathname.new(__FILE__)

require 'amazing_print'  # Pretty print Ruby objects with proper indentation and colors
require 'json'           # STDLIB
require 'terminal-size'  # A tiny gem to accomplish a simple task: Determining the terminal size.
require 'tty-spinner'    # A terminal spinner for tasks that have non-deterministic time frame.
require 'word_wrapper'   # Pure ruby word wrapping

USAGE = <<~EOS

  list brew installed packages -- like "rake -T"

  usage: #{me.basename} [-h | --help | -k | --keywords] [search_terms]

  Where:

    search_terms  is an optional list of keywords or package names
                  seperated by spaces
                  if there are no search_terms then all
                  installed packages will be shown

  Example:

    brewt -k crystal  shows list of the brew installed packages
                      that have "crystal" as part of its name or
                      description.

    brewt crystal     shows only information about a brew managed
                      package named 'crystal'

EOS

KEYWORD_SEARCH = false

unless ARGV.empty?
  if %w[ -h --help ].include? ARGV.first
    puts USAGE
    exit
  end
  if %w[ -k --keyword ].include? ARGV.first
    KEYWORD_SEARCH = true
    ARGV.shift
  end
end

search_terms = ARGV.map(&:downcase)

if KEYWORD_SEARCH || ARGV.empty?
  options = '--installed'
else
  options = search_terms.sort.join(' ')
end

spinner = TTY::Spinner.new("Loading information about installed brew packages ... :spinner", hide_cursor: true, clear: true, format: :pulse_2)
spinner.auto_spin

installed_packages = JSON.parse `brew info --json=v1 #{options}`

spinner.stop

puts

# look at the package full_name and desc to see if at
# least one of the search terms is present.
# package is a Hash
# search_terms is an Array of strings
def select_package(package, search_terms)
  return true if search_terms.empty?
  text = package['full_name'] + ' ' + package['desc']
  search_terms.each do |term|
    return true if text.include? term
  end
  return false
end

if KEYWORD_SEARCH
  installed_packages.select! do |package|
    select_package(package, search_terms)
  end
end

longest_name    = installed_packages.map{|package| package['full_name'].size}.max
desc_start_col  = longest_name + 2

width = Terminal.size[:width] - desc_start_col

installed_packages.each do |package|
  package_name      = package['name']
  package_full_name = package['full_name']
  package_desc      = package['desc']
  package_link      = package['homepage']

  print package_full_name
  print " "*(desc_start_col - package_full_name.size)
  text = WordWrapper::MinimumRaggedness.new(width, package_desc.strip).wrap
  text += package_link
  text_array = text.split("\n")

  last_x = text_array.size-1
  text_array.each_index do |x|
    prefix = x == last_x ? '|__ ' : '|   '
    puts (x<1 ? text_array[x] : (' '*desc_start_col) + prefix+text_array[x] )
  end
end # installed_packages.each do |package|

puts

__END__


ap installed_packages.first #=>
{
                        "name" => "ack",
                   "full_name" => "ack",
                     "oldname" => nil,
                     "aliases" => [],
          "versioned_formulae" => [],
                        "desc" => "Search tool like grep, but optimized for programmers",
                    "homepage" => "https://beyondgrep.com/",
                    "versions" => {
        "stable" => "2.24",
         "devel" => "2.999-03",
          "head" => "HEAD",
        "bottle" => false
    },
                    "revision" => 0,
              "version_scheme" => 0,
                      "bottle" => {},
                    "keg_only" => false,
                     "options" => [],
          "build_dependencies" => [],
                "dependencies" => [],
    "recommended_dependencies" => [],
       "optional_dependencies" => [],
                "requirements" => [],
              "conflicts_with" => [],
                     "caveats" => nil,
                   "installed" => [
        [0] {
                            "version" => "2.24",
                       "used_options" => [],
                    "built_as_bottle" => false,
                 "poured_from_bottle" => false,
               "runtime_dependencies" => [],
            "installed_as_dependency" => false,
               "installed_on_request" => true
        }
    ],
                  "linked_keg" => "2.24",
                      "pinned" => false,
                    "outdated" => false
}             #=> nil
=end
#